<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.yangpeng.mapper.UserEntityMapper" >
  <resultMap id="BaseResultMap" type="com.example.yangpeng.entity.UserEntity" >
    <id column="id_user" property="idUser" jdbcType="VARCHAR" />
    <result column="account_user" property="accountUser" jdbcType="VARCHAR" />
    <result column="phone_user" property="phoneUser" jdbcType="VARCHAR" />
    <result column="email_user" property="emailUser" jdbcType="VARCHAR" />
    <result column="password_user" property="passwordUser" jdbcType="VARCHAR" />
    <result column="create_time_user" property="createTimeUser" jdbcType="TIMESTAMP" />
    <result column="address_user" property="addressUser" jdbcType="VARCHAR" />
    <result column="last_login_time_user" property="lastLoginTimeUser" jdbcType="TIMESTAMP" />
    <result column="img_user" property="imgUser" jdbcType="VARCHAR" />
    <result column="ip_user" property="ipUser" jdbcType="VARCHAR" />
    <result column="update_time_user" property="updateTimeUser" jdbcType="TIMESTAMP" />
    <result column="state_phone_user" property="statePhoneUser" jdbcType="INTEGER" />
    <result column="state_email_user" property="stateEmailUser" jdbcType="INTEGER" />
    <result column="code_email_user" property="codeEmailUser" jdbcType="VARCHAR" />
    <result column="code_phone_user" property="codePhoneUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id_user, account_user, phone_user, email_user,  create_time_user, address_user,
    last_login_time_user, img_user, ip_user, update_time_user, state_phone_user, state_email_user,
    code_email_user, code_phone_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where id_user = #{idUser,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id_user = #{idUser,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.yangpeng.entity.UserEntity" >
    insert into user (id_user, account_user, phone_user,
      email_user, password_user, create_time_user,
      address_user, last_login_time_user, img_user,
      ip_user, update_time_user, state_phone_user,
      state_email_user, code_email_user, code_phone_user
      )
    values (#{idUser,jdbcType=VARCHAR}, #{accountUser,jdbcType=VARCHAR}, #{phoneUser,jdbcType=VARCHAR},
      #{emailUser,jdbcType=VARCHAR}, #{passwordUser,jdbcType=VARCHAR}, #{createTimeUser,jdbcType=TIMESTAMP},
      #{addressUser,jdbcType=VARCHAR}, #{lastLoginTimeUser,jdbcType=TIMESTAMP}, #{imgUser,jdbcType=VARCHAR},
      #{ipUser,jdbcType=VARCHAR}, #{updateTimeUser,jdbcType=TIMESTAMP}, #{statePhoneUser,jdbcType=INTEGER},
      #{stateEmailUser,jdbcType=INTEGER}, #{codeEmailUser,jdbcType=VARCHAR}, #{codePhoneUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.yangpeng.entity.UserEntity" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idUser != null" >
        id_user,
      </if>
      <if test="accountUser != null" >
        account_user,
      </if>
      <if test="phoneUser != null" >
        phone_user,
      </if>
      <if test="emailUser != null" >
        email_user,
      </if>
      <if test="passwordUser != null" >
        password_user,
      </if>

        create_time_user,

      <if test="addressUser != null" >
        address_user,
      </if>
      <if test="lastLoginTimeUser != null" >
        last_login_time_user,
      </if>
      <if test="imgUser != null" >
        img_user,
      </if>
      <if test="ipUser != null" >
        ip_user,
      </if>
      <if test="updateTimeUser != null" >
        update_time_user,
      </if>
      <if test="statePhoneUser != null" >
        state_phone_user,
      </if>
      <if test="stateEmailUser != null" >
        state_email_user,
      </if>
      <if test="codeEmailUser != null" >
        code_email_user,
      </if>
      <if test="codePhoneUser != null" >
        code_phone_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idUser != null" >
        #{idUser,jdbcType=VARCHAR},
      </if>
      <if test="accountUser != null" >
        #{accountUser,jdbcType=VARCHAR},
      </if>
      <if test="phoneUser != null" >
        #{phoneUser,jdbcType=VARCHAR},
      </if>
      <if test="emailUser != null" >
        #{emailUser,jdbcType=VARCHAR},
      </if>
      <if test="passwordUser != null" >
        #{passwordUser,jdbcType=VARCHAR},
      </if>

       now(),

      <if test="addressUser != null" >
        #{addressUser,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTimeUser != null" >
        #{lastLoginTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="imgUser != null" >
        #{imgUser,jdbcType=VARCHAR},
      </if>
      <if test="ipUser != null" >
        #{ipUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTimeUser != null" >
        #{updateTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="statePhoneUser != null" >
        #{statePhoneUser,jdbcType=INTEGER},
      </if>
      <if test="stateEmailUser != null" >
        #{stateEmailUser,jdbcType=INTEGER},
      </if>
      <if test="codeEmailUser != null" >
        #{codeEmailUser,jdbcType=VARCHAR},
      </if>
      <if test="codePhoneUser != null" >
        #{codePhoneUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yangpeng.entity.UserEntity" >
    update user
    <set >
      <if test="accountUser != null" >
        account_user = #{accountUser,jdbcType=VARCHAR},
      </if>
      <if test="phoneUser != null" >
        phone_user = #{phoneUser,jdbcType=VARCHAR},
      </if>
      <if test="emailUser != null" >
        email_user = #{emailUser,jdbcType=VARCHAR},
      </if>
      <if test="passwordUser != null" >
        password_user = #{passwordUser,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUser != null" >
        create_time_user = #{createTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="addressUser != null" >
        address_user = #{addressUser,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTimeUser != null" >
        last_login_time_user = #{lastLoginTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="imgUser != null" >
        img_user = #{imgUser,jdbcType=VARCHAR},
      </if>
      <if test="ipUser != null" >
        ip_user = #{ipUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTimeUser != null" >
        update_time_user = #{updateTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="statePhoneUser != null" >
        state_phone_user = #{statePhoneUser,jdbcType=INTEGER},
      </if>
      <if test="stateEmailUser != null" >
        state_email_user = #{stateEmailUser,jdbcType=INTEGER},
      </if>
      <if test="codeEmailUser != null" >
        code_email_user = #{codeEmailUser,jdbcType=VARCHAR},
      </if>
      <if test="codePhoneUser != null" >
        code_phone_user = #{codePhoneUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id_user = #{idUser,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.yangpeng.entity.UserEntity" >
    update user
    set account_user = #{accountUser,jdbcType=VARCHAR},
      phone_user = #{phoneUser,jdbcType=VARCHAR},
      email_user = #{emailUser,jdbcType=VARCHAR},
      password_user = #{passwordUser,jdbcType=VARCHAR},
      create_time_user = #{createTimeUser,jdbcType=TIMESTAMP},
      address_user = #{addressUser,jdbcType=VARCHAR},
      last_login_time_user = #{lastLoginTimeUser,jdbcType=TIMESTAMP},
      img_user = #{imgUser,jdbcType=VARCHAR},
      ip_user = #{ipUser,jdbcType=VARCHAR},
      update_time_user = #{updateTimeUser,jdbcType=TIMESTAMP},
      state_phone_user = #{statePhoneUser,jdbcType=INTEGER},
      state_email_user = #{stateEmailUser,jdbcType=INTEGER},
      code_email_user = #{codeEmailUser,jdbcType=VARCHAR},
      code_phone_user = #{codePhoneUser,jdbcType=VARCHAR}
    where id_user = #{idUser,jdbcType=VARCHAR}
  </update>



  <select id="getUserListCount" resultType="int">
    select  count(*)  from user;
  </select>

  <select id="getUserList" resultType="map" parameterType="int">

    select
    <include refid="Base_Column_List" />
    from
    user
    <where>
      <if test="accountUser != null" >
        account_user = #{accountUser,jdbcType=VARCHAR},
      </if>
      <if test="phoneUser != null" >
        phone_user = #{phoneUser,jdbcType=INTEGER},
      </if>
      <if test="emailUser != null" >
        email_user = #{emailUser,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUser != null" >
        create_time_user = #{createTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="addressUser != null" >
        address_user = #{addressUser,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTimeUser != null" >
        last_login_time_user = #{lastLoginTimeUser,jdbcType=TIMESTAMP},
      </if>
      <if test="imgUser != null" >
        img_user = #{imgUser,jdbcType=VARCHAR},
      </if>
      <if test="ipUser != null" >
        ip_user = #{ipUser,jdbcType=VARCHAR},
      </if>
    </where>
    order by create_time_user desc
    LIMIT #{startNum}, #{endNum}

  </select>

  <select id="getUserByAccount"  resultType="string" parameterType="string">
        SELECT
            id_user
        FROM
            `user`
        WHERE
            account_user = #{accountUser,jdbcType=VARCHAR}
  </select>

  <select id="getUserByMail" resultType="string" parameterType="string" >
        SELECT
            id_user
        FROM
            `user`
        WHERE
             email_user = #{emailUser,jdbcType=VARCHAR}
  </select>
  <select id="getUserByPhone" resultType="string" parameterType="string" >
        SELECT
            id_user
        FROM
            `user`
        WHERE
            phone_user = #{phoneUser,jdbcType=INTEGER}
  </select>
  <select id="verifyRandomCode" parameterType="string" resultType="string">
        SELECT
            id_user
        FROM
            `user`
        WHERE
            code_email_user = #{newLink}
  </select>
  <update id="updateMailstate" parameterType="string"  >
        UPDATE
            `user`
        SET
            state_email_user = 1
        WHERE
            id_user = #{userId}
  </update>
</mapper>